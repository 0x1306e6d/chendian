{"version":3,"sources":["components/FloatTypography.jsx","components/HexStringTypography.jsx","components/Float.jsx","components/Footer.jsx","components/HexStringInput.jsx","action/input.js","components/IntegerTypography.jsx","components/Integer.jsx","components/GitHubIcon.jsx","components/NavigationBrand.jsx","components/Navigation.jsx","components/ByteOrderTypography.jsx","components/EndiannessTypography.jsx","components/EndiannessConverter.jsx","components/Section.jsx","App.jsx","reducer/index.js","reducer/input.js","serviceWorker.js","index.jsx"],"names":["endianTest","Uint16Array","endianTestBuffer","Uint8Array","buffer","isBigEndian","FloatTypography","array","byteLength","getFloatArray","Float32Array","Float64Array","float","floatArray","uint8Array","i","readFloatBackwards","readFloatForwards","Number","isNaN","Typography","variant","hexify","b","toString","toUpperCase","padStart","HexStringTypography","map","join","Float","Grid","spacing","container","xs","item","useStyles","makeStyles","theme","root","padding","typography","fontFamily","Footer","version","classes","className","align","color","connect","dispatch","change","input","type","changeInput","React","useState","error","setError","TextField","helperText","placeholder","fullWidth","multiline","onChange","event","value","target","test","hexString","replace","byteArray","length","hex","slice","byte","parseInt","push","powTable","0","Big","pow","1","2","3","4","5","6","7","8","signedThreshold","IntegerTypography","signed","readUnsignedInteger","reduce","acc","current","index","plus","times","unsigned","gte","minus","readSignedInteger","Integer","is64Bit","sm","GitHubIcon","SvgIcon","d","textTransform","icon","marginRight","NavigationBrand","Button","component","href","flexGrow","grow","Navigation","AppBar","position","Toolbar","IconButton","ByteOrderTypography","endianness","BigEndianByteOrderTypography","MiddleBigEndianByteOrderTypography","MiddleLittleEndianByteOrderTypography","LittleEndianByteOrderTypography","EndiannessTypography","EndiannessConverter","TypeComponent","words","word","Array","fill","forEach","convertAsBigEndian","convertAsMiddleBigEndian","convertAsMiddleLittleEndian","convertAsLittleEndian","List","ListItem","key","divider","Section","title","TypeEndiannessConverter","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","lg","muiTheme","createMuiTheme","palette","primary","main","dark","light","paddingTop","paddingBottom","IntegerSection","FloatSection","state","CssBaseline","Container","combineReducers","action","Boolean","window","location","hostname","match","store","createStore","reducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sRAKMA,EAAa,IAAIC,YAAY,GAC7BC,EAAmB,IAAIC,WAAWH,EAAWI,QACnDF,EAAiB,GAAK,IACtBA,EAAiB,GAAK,EACtB,IAAMG,EAAgC,MAAlBL,EAAW,GAoDhBM,EAlDS,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC1BC,EAAgB,WACpB,OAAmB,IAAfD,EACK,IAAIE,aAAa,GAGnB,IAAIC,aAAa,IA+BpBC,EAPAP,EAXqB,WAGzB,IAFA,IAAMQ,EAAaJ,IACbK,EAAa,IAAIX,WAAWU,EAAWT,QACpCW,EAAI,EAAGA,EAAIP,EAAYO,GAAK,EACnCD,EAAWN,EAAaO,EAAI,GAAKR,EAAMQ,GAGzC,OAAOF,EAAW,GAKTG,GAtBe,WAGxB,IAFA,IAAMH,EAAaJ,IACbK,EAAa,IAAIX,WAAWU,EAAWT,QACpCW,EAAI,EAAGA,EAAIP,EAAYO,GAAK,EACnCD,EAAWC,GAAKR,EAAMQ,GAGxB,OAAOF,EAAW,GAkBXI,GAIT,OAAIC,OAAOC,MAAMP,GACR,kBAACQ,EAAA,EAAD,CAAYC,QAAQ,SAApB,gBAGF,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAAST,IChDhCU,EAAS,SAACC,GACd,OAAOA,EACJC,SAAS,IACTC,cACAC,SAAS,EAAG,MAWFC,EARa,SAAC,GAAD,IAAGpB,EAAH,EAAGA,MAAH,OAC1B,kBAACa,EAAA,EAAD,CAAYC,QAAQ,aAAad,EAAMqB,IAAIN,GAAQO,KAAK,OCW3CC,EAhBD,SAAC,GAAD,IAAGvB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACZ,kBAACuB,EAAA,EAAD,CAAMC,QAAS,EAAGC,WAAS,GACzB,kBAACF,EAAA,EAAD,CAAMG,GAAI,GAAIC,MAAI,GAChB,kBAAC,EAAD,CAAqB5B,MAAOA,KAE9B,kBAACwB,EAAA,EAAD,CAAMG,GAAI,GAAIC,MAAI,GAChB,kBAAC,EAAD,CAAiB5B,MAAOA,EAAOC,WAAYA,O,QCR3C4B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAASF,EAAMN,QAAQ,IAEzBS,WAAY,CACVC,WACE,4FAiCSC,EA7BA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACVC,EAAUT,IAEhB,OACE,4BAAQU,UAAWD,EAAQN,MACzB,kBAACnB,EAAA,EAAD,CACE0B,UAAWD,EAAQJ,WACnBM,MAAM,SACNC,MAAM,cACN3B,QAAQ,aAEPuB,GAEH,kBAACxB,EAAA,EAAD,CACE0B,UAAWD,EAAQJ,WACnBM,MAAM,SACNC,MAAM,cACN3B,QAAQ,aAJV,iD,iBCgCS4B,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,OAAQ,SAACC,GAAD,OAAWF,ECxDM,SAACE,GAAD,MAAY,CACrCC,KAH0B,eAI1BD,SDsD4BE,CAAYF,QAG3BH,EAnDQ,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAAa,EACXI,IAAMC,UAAS,GADJ,mBAC9BC,EAD8B,KACvBC,EADuB,KA8BrC,OACE,kBAACC,EAAA,EAAD,CACEF,MAAOA,EACPG,WAAYH,GAAS,uCACrBI,YAAY,+BACZxC,QAAQ,WACRyC,WAAS,EACTC,WAAS,EACTC,SAnCiB,SAACC,GAAW,IACvBC,EAAUD,EAAME,OAAhBD,MAER,GAR0B,mBAAmBE,KAQhCF,GAAQ,CACnB,IAAIG,EAAYH,EAKhBG,GAFAA,EAAYA,EAAUC,QAAQ,MAAO,KAEf7C,cAGtB,IADA,IAAM8C,EAAY,GACTxD,EAAI,EAAGA,EAAIsD,EAAUG,OAAQzD,GAAK,EAAG,CAC5C,IAAM0D,EAAMJ,EAAUK,MAAM3D,EAAGA,EAAI,GAC7B4D,EAAOC,SAASH,EAAK,IAC3BF,EAAUM,KAAKF,IAGH,IAAVlB,GACFC,GAAS,GAEXP,EAAOoB,QACY,IAAVd,GACTC,GAAS,S,iBE7BToB,EAAW,CACfC,EAAG,IAAIC,IAAI,GAAGC,IAAI,GAClBC,EAAG,IAAIF,IAAI,GAAGC,IAAI,GAClBE,EAAG,IAAIH,IAAI,GAAGC,IAAI,IAClBG,EAAG,IAAIJ,IAAI,GAAGC,IAAI,IAClBI,EAAG,IAAIL,IAAI,GAAGC,IAAI,IAClBK,EAAG,IAAIN,IAAI,GAAGC,IAAI,IAClBM,EAAG,IAAIP,IAAI,GAAGC,IAAI,IAClBO,EAAG,IAAIR,IAAI,GAAGC,IAAI,IAClBQ,EAAG,IAAIT,IAAI,GAAGC,IAAI,KAGdS,EAAkB,CACtBP,EAAG,IAAIH,IAAI,GAAGC,IAAI,IAClBI,EAAG,IAAIL,IAAI,GAAGC,IAAI,IAClBQ,EAAG,IAAIT,IAAI,GAAGC,IAAI,KA0CLU,EAvCW,SAAC,GAAmC,IAAjCpF,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,WAAYoF,EAAa,EAAbA,OACxCC,EAAsB,kBAC1BtF,EAAMuF,QACJ,SAACC,EAAKC,EAASC,GAAf,OAAyBF,EAAIG,KAAK,IAAIlB,IAAIgB,GAASG,MAAMrB,EAAStE,EAAayF,EAAQ,OACvF,IAAIjB,IAAI,KAqBZ,OACE,oCACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,YAAYuE,EAAS,SAAW,YATlDA,EACK,kBAACxE,EAAA,EAAD,CAAYC,QAAQ,SAZL,WACxB,IAAM+E,EAAWP,IAEjB,OAAIO,EAASC,IAAIX,EAAgBlF,IACxB4F,EAASE,MAAMxB,EAAStE,IAG1B4F,EAK+BG,GAAoB/E,YAGnD,kBAACJ,EAAA,EAAD,CAAYC,QAAQ,SAASwE,IAAsBrE,cChB/CgF,EAvBC,SAAC,GAA2B,IAAzBjG,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAClBiG,EAAyB,IAAfjG,EAEhB,OACE,kBAACuB,EAAA,EAAD,CAAMC,QAAS,EAAGC,WAAS,GACzB,kBAACF,EAAA,EAAD,CAAMG,GAAI,GAAIC,MAAI,GAChB,kBAAC,EAAD,CAAqB5B,MAAOA,KAE9B,kBAACwB,EAAA,EAAD,CAAMG,GAAIuE,EAAU,GAAK,EAAGC,KAAID,GAAU,EAAWtE,MAAI,GACvD,kBAAC,EAAD,CAAmB5B,MAAOA,EAAOC,WAAYA,EAAYoF,QAAM,KAEjE,kBAAC7D,EAAA,EAAD,CAAMG,GAAIuE,EAAU,GAAK,EAAGC,KAAID,GAAU,EAAWtE,MAAI,GACvD,kBAAC,EAAD,CAAmB5B,MAAOA,EAAOC,WAAYA,EAAYoF,QAAQ,O,kCCV1De,EANI,kBACjB,kBAACC,EAAA,EAAD,KACE,0BAAMC,EAAE,+Y,0BCCNzE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJuE,cAAe,aAEjBC,KAAM,CACJC,YAAa1E,EAAMN,QAAQ,QAiBhBiF,EAbS,WACtB,IAAMpE,EAAUT,IAEhB,OACE,kBAAC8E,EAAA,EAAD,CAAQpE,UAAWD,EAAQN,KAAMS,MAAM,UAAUmE,UAAU,IAAIC,KAAK,KAClE,kBAAC,IAAD,CAAatE,UAAWD,EAAQkE,KAAM/D,MAAM,YAC5C,kBAAC5B,EAAA,EAAD,CAAY4B,MAAM,UAAUmE,UAAU,KAAK9F,QAAQ,MAAnD,cCZAe,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ8E,SAAU,GAEZC,KAAM,CACJD,SAAU,GAEZN,KAAM,CACJC,YAAa1E,EAAMN,QAAQ,QAsBhBuF,EAlBI,WACjB,IAAM1E,EAAUT,IAEhB,OACE,yBAAKU,UAAWD,EAAQN,MACtB,kBAACiF,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,yBAAK5E,UAAWD,EAAQyE,OACxB,kBAACK,EAAA,EAAD,CAAY3E,MAAM,UAAUmE,UAAU,IAAIC,KAAK,yCAC7C,kBAAC,EAAD,W,8DCiHGQ,GAxBa,SAAC,GAAgC,IAA9BpH,EAA6B,EAA7BA,WAC7B,OAD0D,EAAjBqH,YAEvC,IAAK,MACH,OAvH+B,SAACrH,GACpC,OAAQA,GACN,KAAK,EACH,OACE,kBAACY,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,OAIJ,KAAK,EACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,WAIJ,KAAK,EACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,mBAIJ,QACE,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,YAiGKyG,CAA6BtH,GACtC,IAAK,YACH,OA5FqC,SAACA,GAC1C,OAAQA,GACN,KAAK,EACH,OACE,kBAACY,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,OAIJ,KAAK,EACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,WAIJ,KAAK,EACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,mBAIJ,QACE,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,YAsEK0G,CAAmCvH,GAC5C,IAAK,eACH,OAjEwC,SAACA,GAC7C,OAAQA,GACN,KAAK,EACH,OACE,kBAACY,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,OAIJ,KAAK,EACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,WAIJ,KAAK,EACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,mBAIJ,QACE,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,YA2CK2G,CAAsCxH,GAC/C,IAAK,SACH,OAtCkC,SAACA,GACvC,OAAQA,GACN,KAAK,EACH,OACE,kBAACY,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,OAIJ,KAAK,EACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,WAIJ,KAAK,EACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,mBAIJ,QACE,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,YAgBK4G,CAAgCzH,GACzC,QACE,OACE,kBAACY,EAAA,EAAD,CAAY4B,MAAM,gBAAgB3B,QAAQ,MAA1C,aCzFO6G,GAvCc,SAAC,GAC5B,OAD+C,EAAjBL,YAE5B,IAAK,MACH,OACE,kBAACzG,EAAA,EAAD,CAAY4B,MAAM,cAAc3B,QAAQ,MAAxC,cAIJ,IAAK,YACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,cAAc3B,QAAQ,MAAxC,qBAIJ,IAAK,eACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,cAAc3B,QAAQ,MAAxC,wBAIJ,IAAK,SACH,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,cAAc3B,QAAQ,MAAxC,iBAIJ,QACE,OACE,kBAACD,EAAA,EAAD,CAAY4B,MAAM,cAAc3B,QAAQ,MAAxC,aCqKO8G,GA5Da,SAACC,GAmD3B,OAlDmC,SAAC,GAElC,IAFyE,IAArC7H,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,WAAYqH,EAAiB,EAAjBA,WACjDQ,EAAQ,GAD0D,WAE/DtH,GACP,IAAMuH,EAAO,IAAIC,MAAM/H,GAOvB,OANA8H,EAAKE,KAAK,GAEVjI,EAAMmE,MAAM3D,EAAGA,EAAIP,GAAYiI,SAAQ,SAAC9D,EAAMsB,GAC5CqC,EAAKrC,GAAStB,KAGRkD,GACN,IAAK,MACHQ,EAAMxD,KA7IW,SAACrE,EAAYD,GACtC,IAAM+H,EAAO,IAAIC,MAAM/H,GAGvB,OAFA8H,EAAKE,KAAK,GAEFhI,GACN,KAAK,EACH8H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB,MACF,KAAK,EACH+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB,MACF,KAAK,EACH+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAMpB,OAAO+H,EAgHYI,CAAmBlI,EAAY8H,IAC1C,MACF,IAAK,YACHD,EAAMxD,KAhHiB,SAACrE,EAAYD,GAC5C,IAAM+H,EAAO,IAAIC,MAAM/H,GAGvB,OAFA8H,EAAKE,KAAK,GAEFhI,GACN,KAAK,EACH8H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB,MACF,KAAK,EACH+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB,MACF,KAAK,EACH+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAMpB,OAAO+H,EAmFYK,CAAyBnI,EAAY8H,IAChD,MACF,IAAK,eACHD,EAAMxD,KAnFoB,SAACrE,EAAYD,GAC/C,IAAM+H,EAAO,IAAIC,MAAM/H,GAGvB,OAFA8H,EAAKE,KAAK,GAEFhI,GACN,KAAK,EACH8H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB,MACF,KAAK,EACH+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB,MACF,KAAK,EACH+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAMpB,OAAO+H,EAsDYM,CAA4BpI,EAAY8H,IACnD,MACF,IAAK,SACHD,EAAMxD,KAtDc,SAACrE,EAAYD,GACzC,IAAM+H,EAAO,IAAIC,MAAM/H,GAGvB,OAFA8H,EAAKE,KAAK,GAEFhI,GACN,KAAK,EACH8H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB,MACF,KAAK,EACH+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB,MACF,KAAK,EACH+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAChB+H,EAAK,GAAK/H,EAAM,GAMpB,OAAO+H,EAyBYO,CAAsBrI,EAAY8H,MAnB1CvH,EAAI,EAAGA,EAAIR,EAAMiE,OAAQzD,GAAKP,EAAa,EAA3CO,GA0BT,OACE,oCACE,kBAAC,GAAD,CAAsB8G,WAAYA,IAClC,kBAAC,GAAD,CAAqBrH,WAAYA,EAAYqH,WAAYA,IACzD,kBAACiB,EAAA,EAAD,KACGT,EAAMzG,KAAI,SAAC0G,EAAMrC,GAAP,OAET,kBAAC8C,EAAA,EAAD,CAAUC,IAAK/C,EAAOgD,SAAO,GAC3B,kBAACb,EAAD,CAAe7H,MAAO+H,EAAM9H,WAAYA,YC1GvC0I,GAxDC,SAACd,GA+Cf,OA9CuB,SAAC,GAAkC,IAAhC7H,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,WAAY2I,EAAY,EAAZA,MACrCC,EAA0BjB,GAAoBC,GAEpD,OACE,kBAACiB,EAAA,EAAD,CAAgBC,iBAAe,GAC7B,kBAACC,EAAA,EAAD,CAAuBC,WAAY,kBAAC,IAAD,OACjC,kBAACpI,EAAA,EAAD,KAAa+H,IAEf,kBAACM,EAAA,EAAD,KACE,kBAAC1H,EAAA,EAAD,CAAMC,QAAS,EAAGC,WAAS,GACzB,kBAACF,EAAA,EAAD,CAAMG,GAAI,GAAIwH,GAAI,EAAGvH,MAAI,GACvB,kBAACiH,EAAD,CAAyB7I,MAAOA,EAAOC,WAAYA,EAAYqH,WAAW,SAE5E,kBAAC9F,EAAA,EAAD,CAAMG,GAAI,GAAIwH,GAAI,EAAGvH,MAAI,GACvB,kBAACiH,EAAD,CAAyB7I,MAAOA,EAAOC,WAAYA,EAAYqH,WAAW,YAE3ErH,EAAa,GACZ,kBAACuB,EAAA,EAAD,CAAMG,GAAI,GAAIwH,GAAI,EAAGvH,MAAI,GACvB,kBAACiH,EAAD,CACE7I,MAAOA,EACPC,WAAYA,EACZqH,WAAW,eAIhBrH,EAAa,GACZ,kBAACuB,EAAA,EAAD,CAAMG,GAAI,GAAIwH,GAAI,EAAGvH,MAAI,GACvB,kBAACiH,EAAD,CACE7I,MAAOA,EACPC,WAAYA,EACZqH,WAAW,uBC5BvB8B,GAAWC,YAAe,CAC9BC,QAAS,CACPC,QAAS,CACPC,KAAM,UACNC,KAAM,UACNC,MAAO,cAKP7H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ2H,WAAY5H,EAAMN,QAAQ,GAC1BmI,cAAe7H,EAAMN,QAAQ,QAI3BoI,GAAiBlB,GAAQ1C,GACzB6D,GAAenB,GAAQpH,GA6CdmB,gBAJS,SAACqH,GAAD,MAAY,CAClClH,MAAOkH,EAAMlH,SAGAH,EA3CH,SAAC,GAAwB,IAAtBL,EAAqB,EAArBA,QAASQ,EAAY,EAAZA,MAChBP,EAAUT,KAEhB,OACE,kBAAC,IAAD,CAAkBE,MAAOqH,IACvB,kBAACY,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CAAW1H,UAAWD,EAAQN,MAC5B,kBAACR,EAAA,EAAD,CAAME,WAAS,EAACD,QAAS,GACvB,kBAACD,EAAA,EAAD,CAAMG,GAAI,GAAIC,MAAI,GAChB,kBAAC,EAAD,OAEF,kBAACJ,EAAA,EAAD,CAAMG,GAAI,GAAIC,MAAI,GAChB,kBAACiI,GAAD,CAAgB7J,MAAO6C,EAAO5C,WAAY,EAAG2I,MAAM,oBAErD,kBAACpH,EAAA,EAAD,CAAMG,GAAI,GAAIC,MAAI,GAChB,kBAACiI,GAAD,CAAgB7J,MAAO6C,EAAO5C,WAAY,EAAG2I,MAAM,oBAErD,kBAACpH,EAAA,EAAD,CAAMG,GAAI,GAAIC,MAAI,GAChB,kBAACiI,GAAD,CAAgB7J,MAAO6C,EAAO5C,WAAY,EAAG2I,MAAM,oBAErD,kBAACpH,EAAA,EAAD,CAAMG,GAAI,GAAIC,MAAI,GAChB,kBAACkI,GAAD,CAAc9J,MAAO6C,EAAO5C,WAAY,EAAG2I,MAAM,YAEnD,kBAACpH,EAAA,EAAD,CAAMG,GAAI,GAAIC,MAAI,GAChB,kBAACkI,GAAD,CAAc9J,MAAO6C,EAAO5C,WAAY,EAAG2I,MAAM,aAIvD,kBAAC,EAAD,CAAQvG,QAASA,QC7DR6H,I,MAAAA,YAAgB,CAAErH,MCFlB,WAAyB,IAAxBkH,EAAuB,uDAAf,GAAII,EAAW,uCACrC,OAAQA,EAAOrH,MACb,IZJwB,eYKtB,OAAOqH,EAAOtH,MAChB,QACE,OAAOkH,OCOOK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTN,IACMC,GAAQC,YAAYC,IAE1BC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,CAAKpI,QALO,oBAOdyI,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.88eb552d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst endianTest = new Uint16Array(1);\nconst endianTestBuffer = new Uint8Array(endianTest.buffer);\nendianTestBuffer[0] = 0xff;\nendianTestBuffer[1] = 0x00;\nconst isBigEndian = endianTest[0] === 0x00ff;\n\nconst FloatTypography = ({ array, byteLength }) => {\n  const getFloatArray = () => {\n    if (byteLength === 4) {\n      return new Float32Array(1);\n    }\n\n    return new Float64Array(1);\n  };\n\n  const readFloatForwards = () => {\n    const floatArray = getFloatArray();\n    const uint8Array = new Uint8Array(floatArray.buffer);\n    for (let i = 0; i < byteLength; i += 1) {\n      uint8Array[i] = array[i];\n    }\n\n    return floatArray[0];\n  };\n\n  const readFloatBackwards = () => {\n    const floatArray = getFloatArray();\n    const uint8Array = new Uint8Array(floatArray.buffer);\n    for (let i = 0; i < byteLength; i += 1) {\n      uint8Array[byteLength - i - 1] = array[i];\n    }\n\n    return floatArray[0];\n  };\n\n  const readFloat = () => {\n    if (isBigEndian) {\n      return readFloatBackwards();\n    }\n\n    return readFloatForwards();\n  };\n\n  const float = readFloat();\n  if (Number.isNaN(float)) {\n    return <Typography variant=\"body1\">Not A Number</Typography>;\n  }\n\n  return <Typography variant=\"body1\">{float}</Typography>;\n};\n\nFloatTypography.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\n  byteLength: PropTypes.oneOf([4, 8]).isRequired,\n};\n\nexport default FloatTypography;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst hexify = (b) => {\n  return b\n    .toString(16)\n    .toUpperCase()\n    .padStart(2, '0');\n};\n\nconst HexStringTypography = ({ array }) => (\n  <Typography variant=\"subtitle1\">{array.map(hexify).join(' ')}</Typography>\n);\n\nHexStringTypography.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default HexStringTypography;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport FloatTypography from './FloatTypography';\nimport HexStringTypography from './HexStringTypography';\n\nconst Float = ({ array, byteLength }) => (\n  <Grid spacing={2} container>\n    <Grid xs={12} item>\n      <HexStringTypography array={array} />\n    </Grid>\n    <Grid xs={12} item>\n      <FloatTypography array={array} byteLength={byteLength} />\n    </Grid>\n  </Grid>\n);\n\nFloat.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\n  byteLength: PropTypes.oneOf([4, 8]).isRequired,\n};\n\nexport default Float;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(4),\n  },\n  typography: {\n    fontFamily:\n      'SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\n  },\n}));\n\nconst Footer = ({ version }) => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.root}>\n      <Typography\n        className={classes.typography}\n        align=\"center\"\n        color=\"textPrimary\"\n        variant=\"subtitle1\"\n      >\n        {version}\n      </Typography>\n      <Typography\n        className={classes.typography}\n        align=\"center\"\n        color=\"textPrimary\"\n        variant=\"subtitle1\"\n      >\n        Made by Gihwan Kim, Powered by GitHub Pages\n      </Typography>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  version: PropTypes.string.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport { changeInput } from '../action/input';\n\nconst validate = (hexText) => /^[a-fA-F0-9\\s]*$/.test(hexText);\n\nconst HexStringInput = ({ change }) => {\n  const [error, setError] = React.useState(false);\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n\n    if (validate(value)) {\n      let hexString = value;\n\n      // remove all whitespaces\n      hexString = hexString.replace(/\\s/g, '');\n      // convert to uppercase\n      hexString = hexString.toUpperCase();\n\n      const byteArray = [];\n      for (let i = 0; i < hexString.length; i += 2) {\n        const hex = hexString.slice(i, i + 2);\n        const byte = parseInt(hex, 16);\n        byteArray.push(byte);\n      }\n\n      if (error === true) {\n        setError(false);\n      }\n      change(byteArray);\n    } else if (error === false) {\n      setError(true);\n    }\n  };\n\n  return (\n    <TextField\n      error={error}\n      helperText={error && 'please enter the correct hex string.'}\n      placeholder=\"please enter the hex string.\"\n      variant=\"outlined\"\n      fullWidth\n      multiline\n      onChange={handleChange}\n    />\n  );\n};\n\nHexStringInput.propTypes = {\n  change: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  change: (input) => dispatch(changeInput(input)),\n});\n\nexport default connect(null, mapDispatchToProps)(HexStringInput);\n","export const CHANGE_INPUT = 'CHANGE_INPUT';\n\nexport const changeInput = (input) => ({\n  type: CHANGE_INPUT,\n  input,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Big from 'big.js';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst powTable = {\n  0: new Big(2).pow(0),\n  1: new Big(2).pow(8),\n  2: new Big(2).pow(16),\n  3: new Big(2).pow(24),\n  4: new Big(2).pow(32),\n  5: new Big(2).pow(40),\n  6: new Big(2).pow(48),\n  7: new Big(2).pow(56),\n  8: new Big(2).pow(64),\n};\n\nconst signedThreshold = {\n  2: new Big(2).pow(16 - 1),\n  4: new Big(2).pow(32 - 1),\n  8: new Big(2).pow(64 - 1),\n};\n\nconst IntegerTypography = ({ array, byteLength, signed }) => {\n  const readUnsignedInteger = () =>\n    array.reduce(\n      (acc, current, index) => acc.plus(new Big(current).times(powTable[byteLength - index - 1])),\n      new Big(0)\n    );\n\n  const readSignedInteger = () => {\n    const unsigned = readUnsignedInteger();\n\n    if (unsigned.gte(signedThreshold[byteLength])) {\n      return unsigned.minus(powTable[byteLength]);\n    }\n\n    return unsigned;\n  };\n\n  const renderInteger = () => {\n    if (signed) {\n      return <Typography variant=\"body1\">{readSignedInteger().toString()}</Typography>;\n    }\n\n    return <Typography variant=\"body1\">{readUnsignedInteger().toString()}</Typography>;\n  };\n\n  return (\n    <>\n      <Typography variant=\"overline\">{signed ? 'Signed' : 'Unsigned'}</Typography>\n      {renderInteger()}\n    </>\n  );\n};\n\nIntegerTypography.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\n  byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\n  signed: PropTypes.bool.isRequired,\n};\n\nexport default IntegerTypography;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport HexStringTypography from './HexStringTypography';\nimport IntegerTypography from './IntegerTypography';\n\nconst Integer = ({ array, byteLength }) => {\n  const is64Bit = byteLength === 8;\n\n  return (\n    <Grid spacing={2} container>\n      <Grid xs={12} item>\n        <HexStringTypography array={array} />\n      </Grid>\n      <Grid xs={is64Bit ? 12 : 6} sm={is64Bit ? 6 : false} item>\n        <IntegerTypography array={array} byteLength={byteLength} signed />\n      </Grid>\n      <Grid xs={is64Bit ? 12 : 6} sm={is64Bit ? 6 : false} item>\n        <IntegerTypography array={array} byteLength={byteLength} signed={false} />\n      </Grid>\n    </Grid>\n  );\n};\n\nInteger.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\n  byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\n};\n\nexport default Integer;\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst GitHubIcon = () => (\n  <SvgIcon>\n    <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n  </SvgIcon>\n);\n\nexport default GitHubIcon;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textTransform: 'lowercase',\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst NavigationBrand = () => {\n  const classes = useStyles();\n\n  return (\n    <Button className={classes.root} color=\"inherit\" component=\"a\" href=\"/\">\n      <ShuffleIcon className={classes.icon} color=\"inherit\" />\n      <Typography color=\"inherit\" component=\"h1\" variant=\"h6\">\n        chendian\n      </Typography>\n    </Button>\n  );\n};\n\nexport default NavigationBrand;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport GitHubIcon from './GitHubIcon';\nimport NavigationBrand from './NavigationBrand';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Navigation = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <NavigationBrand />\n          <div className={classes.grow} />\n          <IconButton color=\"inherit\" component=\"a\" href=\"https://github.com/ghkim3221/chendian\">\n            <GitHubIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst BigEndianByteOrderTypography = (byteLength) => {\n  switch (byteLength) {\n    case 2:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          A B\n        </Typography>\n      );\n    case 4:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          A B C D\n        </Typography>\n      );\n    case 8:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          A B C D E F G H\n        </Typography>\n      );\n    default:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          Unknown\n        </Typography>\n      );\n  }\n};\n\nconst MiddleBigEndianByteOrderTypography = (byteLength) => {\n  switch (byteLength) {\n    case 2:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          A B\n        </Typography>\n      );\n    case 4:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          B A D C\n        </Typography>\n      );\n    case 8:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          B A D C F E H G\n        </Typography>\n      );\n    default:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          Unknown\n        </Typography>\n      );\n  }\n};\n\nconst MiddleLittleEndianByteOrderTypography = (byteLength) => {\n  switch (byteLength) {\n    case 2:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          A B\n        </Typography>\n      );\n    case 4:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          C D A B\n        </Typography>\n      );\n    case 8:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          G H E F C D A B\n        </Typography>\n      );\n    default:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          Unknown\n        </Typography>\n      );\n  }\n};\n\nconst LittleEndianByteOrderTypography = (byteLength) => {\n  switch (byteLength) {\n    case 2:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          B A\n        </Typography>\n      );\n    case 4:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          D C B A\n        </Typography>\n      );\n    case 8:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          H G F E D C B A\n        </Typography>\n      );\n    default:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          Unknown\n        </Typography>\n      );\n  }\n};\n\nconst ByteOrderTypography = ({ byteLength, endianness }) => {\n  switch (endianness) {\n    case 'big':\n      return BigEndianByteOrderTypography(byteLength);\n    case 'middleBig':\n      return MiddleBigEndianByteOrderTypography(byteLength);\n    case 'middleLittle':\n      return MiddleLittleEndianByteOrderTypography(byteLength);\n    case 'little':\n      return LittleEndianByteOrderTypography(byteLength);\n    default:\n      return (\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          Unknown\n        </Typography>\n      );\n  }\n};\n\nByteOrderTypography.propTypes = {\n  byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\n  endianness: PropTypes.oneOf(['big', 'middleBig', 'middleLittle', 'little']).isRequired,\n};\n\nexport default ByteOrderTypography;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst EndiannessTypography = ({ endianness }) => {\n  switch (endianness) {\n    case 'big':\n      return (\n        <Typography color=\"textPrimary\" variant=\"h5\">\n          Big Endian\n        </Typography>\n      );\n    case 'middleBig':\n      return (\n        <Typography color=\"textPrimary\" variant=\"h5\">\n          Middle Big Endian\n        </Typography>\n      );\n    case 'middleLittle':\n      return (\n        <Typography color=\"textPrimary\" variant=\"h5\">\n          Middle Little Endian\n        </Typography>\n      );\n    case 'little':\n      return (\n        <Typography color=\"textPrimary\" variant=\"h5\">\n          Little Endian\n        </Typography>\n      );\n    default:\n      return (\n        <Typography color=\"textPrimary\" variant=\"h5\">\n          Unknown\n        </Typography>\n      );\n  }\n};\n\nEndiannessTypography.propTypes = {\n  endianness: PropTypes.oneOf(['big', 'middleBig', 'middleLittle', 'little']).isRequired,\n};\n\nexport default EndiannessTypography;\n","/* eslint-disable prefer-destructuring */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport ByteOrderTypography from './ByteOrderTypography';\nimport EndiannessTypography from './EndiannessTypography';\n\nconst convertAsBigEndian = (byteLength, array) => {\n  const word = new Array(byteLength);\n  word.fill(0);\n\n  switch (byteLength) {\n    case 2:\n      word[0] = array[0];\n      word[1] = array[1];\n      break;\n    case 4:\n      word[0] = array[0];\n      word[1] = array[1];\n      word[2] = array[2];\n      word[3] = array[3];\n      break;\n    case 8:\n      word[0] = array[0];\n      word[1] = array[1];\n      word[2] = array[2];\n      word[3] = array[3];\n      word[4] = array[4];\n      word[5] = array[5];\n      word[6] = array[6];\n      word[7] = array[7];\n      break;\n    default:\n      break;\n  }\n\n  return word;\n};\n\nconst convertAsMiddleBigEndian = (byteLength, array) => {\n  const word = new Array(byteLength);\n  word.fill(0);\n\n  switch (byteLength) {\n    case 2:\n      word[0] = array[0];\n      word[1] = array[1];\n      break;\n    case 4:\n      word[0] = array[1];\n      word[1] = array[0];\n      word[2] = array[3];\n      word[3] = array[2];\n      break;\n    case 8:\n      word[0] = array[1];\n      word[1] = array[0];\n      word[2] = array[3];\n      word[3] = array[2];\n      word[4] = array[5];\n      word[5] = array[4];\n      word[6] = array[7];\n      word[7] = array[6];\n      break;\n    default:\n      break;\n  }\n\n  return word;\n};\n\nconst convertAsMiddleLittleEndian = (byteLength, array) => {\n  const word = new Array(byteLength);\n  word.fill(0);\n\n  switch (byteLength) {\n    case 2:\n      word[0] = array[0];\n      word[1] = array[1];\n      break;\n    case 4:\n      word[0] = array[2];\n      word[1] = array[3];\n      word[2] = array[0];\n      word[3] = array[1];\n      break;\n    case 8:\n      word[0] = array[6];\n      word[1] = array[7];\n      word[2] = array[4];\n      word[3] = array[5];\n      word[4] = array[2];\n      word[5] = array[3];\n      word[6] = array[1];\n      word[7] = array[0];\n      break;\n    default:\n      break;\n  }\n\n  return word;\n};\n\nconst convertAsLittleEndian = (byteLength, array) => {\n  const word = new Array(byteLength);\n  word.fill(0);\n\n  switch (byteLength) {\n    case 2:\n      word[0] = array[1];\n      word[1] = array[0];\n      break;\n    case 4:\n      word[0] = array[3];\n      word[1] = array[2];\n      word[2] = array[1];\n      word[3] = array[0];\n      break;\n    case 8:\n      word[0] = array[7];\n      word[1] = array[6];\n      word[2] = array[5];\n      word[3] = array[4];\n      word[4] = array[3];\n      word[5] = array[2];\n      word[6] = array[1];\n      word[7] = array[0];\n      break;\n    default:\n      break;\n  }\n\n  return word;\n};\n\nconst EndiannessConverter = (TypeComponent) => {\n  const WrappedEndiannessConverter = ({ array, byteLength, endianness }) => {\n    const words = [];\n    for (let i = 0; i < array.length; i += byteLength) {\n      const word = new Array(byteLength);\n      word.fill(0);\n\n      array.slice(i, i + byteLength).forEach((byte, index) => {\n        word[index] = byte;\n      });\n\n      switch (endianness) {\n        case 'big':\n          words.push(convertAsBigEndian(byteLength, word));\n          break;\n        case 'middleBig':\n          words.push(convertAsMiddleBigEndian(byteLength, word));\n          break;\n        case 'middleLittle':\n          words.push(convertAsMiddleLittleEndian(byteLength, word));\n          break;\n        case 'little':\n          words.push(convertAsLittleEndian(byteLength, word));\n          break;\n        default:\n          break;\n      }\n    }\n\n    return (\n      <>\n        <EndiannessTypography endianness={endianness} />\n        <ByteOrderTypography byteLength={byteLength} endianness={endianness} />\n        <List>\n          {words.map((word, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <ListItem key={index} divider>\n              <TypeComponent array={word} byteLength={byteLength} />\n            </ListItem>\n          ))}\n        </List>\n      </>\n    );\n  };\n\n  WrappedEndiannessConverter.propTypes = {\n    array: PropTypes.arrayOf(PropTypes.number).isRequired,\n    byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\n    endianness: PropTypes.oneOf(['big', 'middleBig', 'middleLittle', 'little']).isRequired,\n  };\n\n  return WrappedEndiannessConverter;\n};\n\nEndiannessConverter.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\n  byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\n  endianness: PropTypes.oneOf(['big', 'middleBig', 'middleLittle', 'little']).isRequired,\n};\n\nexport default EndiannessConverter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport EndiannessConverter from './EndiannessConverter';\n\nconst Section = (TypeComponent) => {\n  const WrappedSection = ({ array, byteLength, title }) => {\n    const TypeEndiannessConverter = EndiannessConverter(TypeComponent);\n\n    return (\n      <ExpansionPanel defaultExpanded>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>{title}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Grid spacing={2} container>\n            <Grid xs={12} lg={6} item>\n              <TypeEndiannessConverter array={array} byteLength={byteLength} endianness=\"big\" />\n            </Grid>\n            <Grid xs={12} lg={6} item>\n              <TypeEndiannessConverter array={array} byteLength={byteLength} endianness=\"little\" />\n            </Grid>\n            {byteLength > 2 && (\n              <Grid xs={12} lg={6} item>\n                <TypeEndiannessConverter\n                  array={array}\n                  byteLength={byteLength}\n                  endianness=\"middleBig\"\n                />\n              </Grid>\n            )}\n            {byteLength > 2 && (\n              <Grid xs={12} lg={6} item>\n                <TypeEndiannessConverter\n                  array={array}\n                  byteLength={byteLength}\n                  endianness=\"middleLittle\"\n                />\n              </Grid>\n            )}\n          </Grid>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n  };\n\n  WrappedSection.propTypes = {\n    array: PropTypes.arrayOf(PropTypes.number).isRequired,\n    byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\n    title: PropTypes.string.isRequired,\n  };\n\n  return WrappedSection;\n};\n\nSection.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\n  byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { createMuiTheme, makeStyles, MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport Float from './components/Float';\nimport Footer from './components/Footer';\nimport HexStringInput from './components/HexStringInput';\nimport Integer from './components/Integer';\nimport Navigation from './components/Navigation';\nimport Section from './components/Section';\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#263238',\n      dark: '#000A12',\n      light: '#4F5B62',\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(2),\n  },\n}));\n\nconst IntegerSection = Section(Integer);\nconst FloatSection = Section(Float);\n\nconst App = ({ version, input }) => {\n  const classes = useStyles();\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <CssBaseline />\n      <Navigation />\n      <Container className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid xs={12} item>\n            <HexStringInput />\n          </Grid>\n          <Grid xs={12} item>\n            <IntegerSection array={input} byteLength={8} title=\"64 bit integer\" />\n          </Grid>\n          <Grid xs={12} item>\n            <IntegerSection array={input} byteLength={4} title=\"32 bit integer\" />\n          </Grid>\n          <Grid xs={12} item>\n            <IntegerSection array={input} byteLength={2} title=\"16 bit integer\" />\n          </Grid>\n          <Grid xs={12} item>\n            <FloatSection array={input} byteLength={8} title=\"double\" />\n          </Grid>\n          <Grid xs={12} item>\n            <FloatSection array={input} byteLength={4} title=\"float\" />\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer version={version} />\n    </MuiThemeProvider>\n  );\n};\n\nApp.propTypes = {\n  version: PropTypes.string.isRequired,\n  input: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  input: state.input,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\n\nimport input from './input';\n\nexport default combineReducers({ input });\n","import { CHANGE_INPUT } from '../action/input';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case CHANGE_INPUT:\n      return action.input;\n    default:\n      return state;\n  }\n};\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './App';\nimport './App.css';\n\nimport reducer from './reducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst version = 'chendian 1.3.0';\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App version={version} />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}