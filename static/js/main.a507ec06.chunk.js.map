{"version":3,"sources":["components/FloatTypography.jsx","components/HexStringTypography.jsx","components/Float.jsx","components/Footer.jsx","components/HexStringInput.jsx","action/input.js","components/IntegerTypography.jsx","components/Integer.jsx","components/GitHubIcon.jsx","components/NavigationBrand.jsx","components/Navigation.jsx","components/ByteOrderTypography.jsx","components/EndiannessTypography.jsx","components/EndiannessConverter.jsx","components/Section.jsx","App.jsx","reducer/index.js","reducer/input.js","serviceWorker.js","index.jsx"],"names":["endianTest","Uint16Array","endianTestBuffer","Uint8Array","buffer","isBigEndian","FloatTypography","array","byteLength","getFloatArray","Float32Array","Float64Array","float","floatArray","uint8Array","i","readFloatBackwards","readFloatForwards","Number","isNaN","variant","hexify","b","toString","toUpperCase","padStart","HexStringTypography","map","join","Float","spacing","container","xs","item","withStyles","theme","root","padding","unit","typography","fontFamily","classes","version","className","align","color","connect","dispatch","change","input","type","changeInput","React","useState","error","setError","helperText","placeholder","fullWidth","multiline","onChange","event","value","target","test","hexString","replace","byteArray","length","hex","slice","byte","parseInt","push","powTable","0","Big","pow","1","2","3","4","5","6","7","8","signedThreshold","IntegerTypography","signed","readUnsignedInteger","reduce","acc","current","index","plus","times","unsigned","gte","minus","readSignedInteger","Integer","is64Bit","sm","GitHubIcon","d","textTransform","icon","marginRight","component","href","flexGrow","grow","position","ByteOrderTypography","endianness","BigEndianByteOrderTypography","MiddleBigEndianByteOrderTypography","MiddleLittleEndianByteOrderTypography","LittleEndianByteOrderTypography","EndiannessTypography","EndiannessConverter","TypeComponent","words","word","Array","fill","forEach","convertAsBigEndian","convertAsMiddleBigEndian","convertAsMiddleLittleEndian","convertAsLittleEndian","key","divider","Section","title","TypeEndiannessConverter","defaultExpanded","expandIcon","lg","muiTheme","createMuiTheme","palette","primary","main","dark","light","useNextVariants","IntegerSection","FloatSection","state","layout","width","paddingTop","paddingBottom","marginLeft","breakpoints","up","combineReducers","action","Boolean","window","location","hostname","match","store","createStore","reducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a507ec06.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst endianTest = new Uint16Array(1);\r\nconst endianTestBuffer = new Uint8Array(endianTest.buffer);\r\nendianTestBuffer[0] = 0xff;\r\nendianTestBuffer[1] = 0x00;\r\nconst isBigEndian = endianTest[0] === 0x00ff;\r\n\r\nconst FloatTypography = ({ array, byteLength }) => {\r\n  const getFloatArray = () => {\r\n    if (byteLength === 4) {\r\n      return new Float32Array(1);\r\n    }\r\n\r\n    return new Float64Array(1);\r\n  };\r\n\r\n  const readFloatForwards = () => {\r\n    const floatArray = getFloatArray();\r\n    const uint8Array = new Uint8Array(floatArray.buffer);\r\n    for (let i = 0; i < byteLength; i += 1) {\r\n      uint8Array[i] = array[i];\r\n    }\r\n\r\n    return floatArray[0];\r\n  };\r\n\r\n  const readFloatBackwards = () => {\r\n    const floatArray = getFloatArray();\r\n    const uint8Array = new Uint8Array(floatArray.buffer);\r\n    for (let i = 0; i < byteLength; i += 1) {\r\n      uint8Array[byteLength - i - 1] = array[i];\r\n    }\r\n\r\n    return floatArray[0];\r\n  };\r\n\r\n  const readFloat = () => {\r\n    if (isBigEndian) {\r\n      return readFloatBackwards();\r\n    }\r\n\r\n    return readFloatForwards();\r\n  };\r\n\r\n  const float = readFloat();\r\n  if (Number.isNaN(float)) {\r\n    return <Typography variant=\"body1\">Not A Number</Typography>;\r\n  }\r\n\r\n  return <Typography variant=\"body1\">{float}</Typography>;\r\n};\r\n\r\nFloatTypography.propTypes = {\r\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  byteLength: PropTypes.oneOf([4, 8]).isRequired,\r\n};\r\n\r\nexport default FloatTypography;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst hexify = (b) => {\r\n  return b\r\n    .toString(16)\r\n    .toUpperCase()\r\n    .padStart(2, '0');\r\n};\r\n\r\nconst HexStringTypography = ({ array }) => (\r\n  <Typography variant=\"subtitle1\">{array.map(hexify).join(' ')}</Typography>\r\n);\r\n\r\nHexStringTypography.propTypes = {\r\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n};\r\n\r\nexport default HexStringTypography;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport FloatTypography from './FloatTypography';\r\nimport HexStringTypography from './HexStringTypography';\r\n\r\nconst Float = ({ array, byteLength }) => (\r\n  <Grid spacing={16} container>\r\n    <Grid xs={12} item>\r\n      <HexStringTypography array={array} />\r\n    </Grid>\r\n    <Grid xs={12} item>\r\n      <FloatTypography array={array} byteLength={byteLength} />\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nFloat.propTypes = {\r\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  byteLength: PropTypes.oneOf([4, 8]).isRequired,\r\n};\r\n\r\nexport default Float;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    padding: theme.spacing.unit * 4,\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      'SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace',\r\n  },\r\n});\r\n\r\nconst Footer = ({ classes, version }) => (\r\n  <footer className={classes.root}>\r\n    <Typography\r\n      className={classes.typography}\r\n      align=\"center\"\r\n      color=\"textPrimary\"\r\n      variant=\"subtitle1\"\r\n    >\r\n      {version}\r\n    </Typography>\r\n    <Typography\r\n      className={classes.typography}\r\n      align=\"center\"\r\n      color=\"textPrimary\"\r\n      variant=\"subtitle1\"\r\n    >\r\n      Made by Gihwan Kim, Powered by GitHub Pages\r\n    </Typography>\r\n  </footer>\r\n);\r\n\r\nFooter.propTypes = {\r\n  classes: PropTypes.shape({\r\n    root: PropTypes.string.isRequired,\r\n    typography: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  version: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { changeInput } from '../action/input';\r\n\r\nconst validate = (hexText) => /^[a-fA-F0-9\\s]*$/.test(hexText);\r\n\r\nconst HexStringInput = ({ change }) => {\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n\r\n    if (validate(value)) {\r\n      let hexString = value;\r\n\r\n      // remove all whitespaces\r\n      hexString = hexString.replace(/\\s/g, '');\r\n      // convert to uppercase\r\n      hexString = hexString.toUpperCase();\r\n\r\n      const byteArray = [];\r\n      for (let i = 0; i < hexString.length; i += 2) {\r\n        const hex = hexString.slice(i, i + 2);\r\n        const byte = parseInt(hex, 16);\r\n        byteArray.push(byte);\r\n      }\r\n\r\n      if (error === true) {\r\n        setError(false);\r\n      }\r\n      change(byteArray);\r\n    } else if (error === false) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      error={error}\r\n      helperText={error && 'please enter the correct hex string.'}\r\n      placeholder=\"please enter the hex string.\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      multiline\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nHexStringInput.propTypes = {\r\n  change: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  change: (input) => dispatch(changeInput(input)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(HexStringInput);\r\n","export const CHANGE_INPUT = 'CHANGE_INPUT';\r\n\r\nexport const changeInput = (input) => ({\r\n  type: CHANGE_INPUT,\r\n  input,\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Big from 'big.js';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst powTable = {\r\n  0: new Big(2).pow(0),\r\n  1: new Big(2).pow(8),\r\n  2: new Big(2).pow(16),\r\n  3: new Big(2).pow(24),\r\n  4: new Big(2).pow(32),\r\n  5: new Big(2).pow(40),\r\n  6: new Big(2).pow(48),\r\n  7: new Big(2).pow(56),\r\n  8: new Big(2).pow(64),\r\n};\r\n\r\nconst signedThreshold = {\r\n  2: new Big(2).pow(16 - 1),\r\n  4: new Big(2).pow(32 - 1),\r\n  8: new Big(2).pow(64 - 1),\r\n};\r\n\r\nconst IntegerTypography = ({ array, byteLength, signed }) => {\r\n  const readUnsignedInteger = () =>\r\n    array.reduce(\r\n      (acc, current, index) => acc.plus(new Big(current).times(powTable[byteLength - index - 1])),\r\n      new Big(0)\r\n    );\r\n\r\n  const readSignedInteger = () => {\r\n    const unsigned = readUnsignedInteger();\r\n\r\n    if (unsigned.gte(signedThreshold[byteLength])) {\r\n      return unsigned.minus(powTable[byteLength]);\r\n    }\r\n\r\n    return unsigned;\r\n  };\r\n\r\n  const renderInteger = () => {\r\n    if (signed) {\r\n      return <Typography variant=\"body1\">{readSignedInteger().toString()}</Typography>;\r\n    }\r\n\r\n    return <Typography variant=\"body1\">{readUnsignedInteger().toString()}</Typography>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"overline\">{signed ? 'Signed' : 'Unsigned'}</Typography>\r\n      {renderInteger()}\r\n    </>\r\n  );\r\n};\r\n\r\nIntegerTypography.propTypes = {\r\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\r\n  signed: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default IntegerTypography;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport HexStringTypography from './HexStringTypography';\r\nimport IntegerTypography from './IntegerTypography';\r\n\r\nconst Integer = ({ array, byteLength }) => {\r\n  const is64Bit = byteLength === 8;\r\n\r\n  return (\r\n    <Grid spacing={16} container>\r\n      <Grid xs={12} item>\r\n        <HexStringTypography array={array} />\r\n      </Grid>\r\n      <Grid xs={is64Bit ? 12 : 6} sm={is64Bit ? 6 : false} item>\r\n        <IntegerTypography array={array} byteLength={byteLength} signed />\r\n      </Grid>\r\n      <Grid xs={is64Bit ? 12 : 6} sm={is64Bit ? 6 : false} item>\r\n        <IntegerTypography array={array} byteLength={byteLength} signed={false} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInteger.propTypes = {\r\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\r\n};\r\n\r\nexport default Integer;\r\n","import React from 'react';\r\n\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\n\r\nconst GitHubIcon = () => (\r\n  <SvgIcon>\r\n    <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\r\n  </SvgIcon>\r\n);\r\n\r\nexport default GitHubIcon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    textTransform: 'lowercase',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nconst NavigationBrand = ({ classes }) => (\r\n  <Button className={classes.root} color=\"inherit\" component=\"a\" href=\"/\">\r\n    <ShuffleIcon className={classes.icon} color=\"inherit\" />\r\n    <Typography color=\"inherit\" component=\"h1\" variant=\"h6\">\r\n      chendian\r\n    </Typography>\r\n  </Button>\r\n);\r\n\r\nNavigationBrand.propTypes = {\r\n  classes: PropTypes.shape({\r\n    root: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NavigationBrand);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport GitHubIcon from './GitHubIcon';\r\nimport NavigationBrand from './NavigationBrand';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nconst Navigation = ({ classes }) => (\r\n  <div className={classes.root}>\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <NavigationBrand />\r\n        <div className={classes.grow} />\r\n        <IconButton color=\"inherit\" component=\"a\" href=\"https://github.com/ghkim3221/chendian\">\r\n          <GitHubIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </div>\r\n);\r\n\r\nNavigation.propTypes = {\r\n  classes: PropTypes.shape({\r\n    root: PropTypes.string.isRequired,\r\n    grow: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst BigEndianByteOrderTypography = (byteLength) => {\r\n  switch (byteLength) {\r\n    case 2:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          A B\r\n        </Typography>\r\n      );\r\n    case 4:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          A B C D\r\n        </Typography>\r\n      );\r\n    case 8:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          A B C D E F G H\r\n        </Typography>\r\n      );\r\n    default:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          Unknown\r\n        </Typography>\r\n      );\r\n  }\r\n};\r\n\r\nconst MiddleBigEndianByteOrderTypography = (byteLength) => {\r\n  switch (byteLength) {\r\n    case 2:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          A B\r\n        </Typography>\r\n      );\r\n    case 4:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          B A D C\r\n        </Typography>\r\n      );\r\n    case 8:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          B A D C F E H G\r\n        </Typography>\r\n      );\r\n    default:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          Unknown\r\n        </Typography>\r\n      );\r\n  }\r\n};\r\n\r\nconst MiddleLittleEndianByteOrderTypography = (byteLength) => {\r\n  switch (byteLength) {\r\n    case 2:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          A B\r\n        </Typography>\r\n      );\r\n    case 4:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          C D A B\r\n        </Typography>\r\n      );\r\n    case 8:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          G H E F C D A B\r\n        </Typography>\r\n      );\r\n    default:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          Unknown\r\n        </Typography>\r\n      );\r\n  }\r\n};\r\n\r\nconst LittleEndianByteOrderTypography = (byteLength) => {\r\n  switch (byteLength) {\r\n    case 2:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          B A\r\n        </Typography>\r\n      );\r\n    case 4:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          D C B A\r\n        </Typography>\r\n      );\r\n    case 8:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          H G F E D C B A\r\n        </Typography>\r\n      );\r\n    default:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          Unknown\r\n        </Typography>\r\n      );\r\n  }\r\n};\r\n\r\nconst ByteOrderTypography = ({ byteLength, endianness }) => {\r\n  switch (endianness) {\r\n    case 'big':\r\n      return BigEndianByteOrderTypography(byteLength);\r\n    case 'middleBig':\r\n      return MiddleBigEndianByteOrderTypography(byteLength);\r\n    case 'middleLittle':\r\n      return MiddleLittleEndianByteOrderTypography(byteLength);\r\n    case 'little':\r\n      return LittleEndianByteOrderTypography(byteLength);\r\n    default:\r\n      return (\r\n        <Typography color=\"textSecondary\" variant=\"h6\">\r\n          Unknown\r\n        </Typography>\r\n      );\r\n  }\r\n};\r\n\r\nByteOrderTypography.propTypes = {\r\n  byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\r\n  endianness: PropTypes.oneOf(['big', 'middleBig', 'middleLittle', 'little']).isRequired,\r\n};\r\n\r\nexport default ByteOrderTypography;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst EndiannessTypography = ({ endianness }) => {\r\n  switch (endianness) {\r\n    case 'big':\r\n      return (\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          Big Endian\r\n        </Typography>\r\n      );\r\n    case 'middleBig':\r\n      return (\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          Middle Big Endian\r\n        </Typography>\r\n      );\r\n    case 'middleLittle':\r\n      return (\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          Middle Little Endian\r\n        </Typography>\r\n      );\r\n    case 'little':\r\n      return (\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          Little Endian\r\n        </Typography>\r\n      );\r\n    default:\r\n      return (\r\n        <Typography color=\"textPrimary\" variant=\"h5\">\r\n          Unknown\r\n        </Typography>\r\n      );\r\n  }\r\n};\r\n\r\nEndiannessTypography.propTypes = {\r\n  endianness: PropTypes.oneOf(['big', 'middleBig', 'middleLittle', 'little']).isRequired,\r\n};\r\n\r\nexport default EndiannessTypography;\r\n","/* eslint-disable prefer-destructuring */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nimport ByteOrderTypography from './ByteOrderTypography';\r\nimport EndiannessTypography from './EndiannessTypography';\r\n\r\nconst convertAsBigEndian = (byteLength, array) => {\r\n  const word = new Array(byteLength);\r\n  word.fill(0);\r\n\r\n  switch (byteLength) {\r\n    case 2:\r\n      word[0] = array[0];\r\n      word[1] = array[1];\r\n      break;\r\n    case 4:\r\n      word[0] = array[0];\r\n      word[1] = array[1];\r\n      word[2] = array[2];\r\n      word[3] = array[3];\r\n      break;\r\n    case 8:\r\n      word[0] = array[0];\r\n      word[1] = array[1];\r\n      word[2] = array[2];\r\n      word[3] = array[3];\r\n      word[4] = array[4];\r\n      word[5] = array[5];\r\n      word[6] = array[6];\r\n      word[7] = array[7];\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return word;\r\n};\r\n\r\nconst convertAsMiddleBigEndian = (byteLength, array) => {\r\n  const word = new Array(byteLength);\r\n  word.fill(0);\r\n\r\n  switch (byteLength) {\r\n    case 2:\r\n      word[0] = array[0];\r\n      word[1] = array[1];\r\n      break;\r\n    case 4:\r\n      word[0] = array[1];\r\n      word[1] = array[0];\r\n      word[2] = array[3];\r\n      word[3] = array[2];\r\n      break;\r\n    case 8:\r\n      word[0] = array[1];\r\n      word[1] = array[0];\r\n      word[2] = array[3];\r\n      word[3] = array[2];\r\n      word[4] = array[5];\r\n      word[5] = array[4];\r\n      word[6] = array[7];\r\n      word[7] = array[6];\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return word;\r\n};\r\n\r\nconst convertAsMiddleLittleEndian = (byteLength, array) => {\r\n  const word = new Array(byteLength);\r\n  word.fill(0);\r\n\r\n  switch (byteLength) {\r\n    case 2:\r\n      word[0] = array[0];\r\n      word[1] = array[1];\r\n      break;\r\n    case 4:\r\n      word[0] = array[2];\r\n      word[1] = array[3];\r\n      word[2] = array[0];\r\n      word[3] = array[1];\r\n      break;\r\n    case 8:\r\n      word[0] = array[6];\r\n      word[1] = array[7];\r\n      word[2] = array[4];\r\n      word[3] = array[5];\r\n      word[4] = array[2];\r\n      word[5] = array[3];\r\n      word[6] = array[1];\r\n      word[7] = array[0];\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return word;\r\n};\r\n\r\nconst convertAsLittleEndian = (byteLength, array) => {\r\n  const word = new Array(byteLength);\r\n  word.fill(0);\r\n\r\n  switch (byteLength) {\r\n    case 2:\r\n      word[0] = array[1];\r\n      word[1] = array[0];\r\n      break;\r\n    case 4:\r\n      word[0] = array[3];\r\n      word[1] = array[2];\r\n      word[2] = array[1];\r\n      word[3] = array[0];\r\n      break;\r\n    case 8:\r\n      word[0] = array[7];\r\n      word[1] = array[6];\r\n      word[2] = array[5];\r\n      word[3] = array[4];\r\n      word[4] = array[3];\r\n      word[5] = array[2];\r\n      word[6] = array[1];\r\n      word[7] = array[0];\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return word;\r\n};\r\n\r\nconst EndiannessConverter = (TypeComponent) => {\r\n  const WrappedEndiannessConverter = ({ array, byteLength, endianness }) => {\r\n    const words = [];\r\n    for (let i = 0; i < array.length; i += byteLength) {\r\n      const word = new Array(byteLength);\r\n      word.fill(0);\r\n\r\n      array.slice(i, i + byteLength).forEach((byte, index) => {\r\n        word[index] = byte;\r\n      });\r\n\r\n      switch (endianness) {\r\n        case 'big':\r\n          words.push(convertAsBigEndian(byteLength, word));\r\n          break;\r\n        case 'middleBig':\r\n          words.push(convertAsMiddleBigEndian(byteLength, word));\r\n          break;\r\n        case 'middleLittle':\r\n          words.push(convertAsMiddleLittleEndian(byteLength, word));\r\n          break;\r\n        case 'little':\r\n          words.push(convertAsLittleEndian(byteLength, word));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <EndiannessTypography endianness={endianness} />\r\n        <ByteOrderTypography byteLength={byteLength} endianness={endianness} />\r\n        <List>\r\n          {words.map((word, index) => (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <ListItem key={index} divider>\r\n              <TypeComponent array={word} byteLength={byteLength} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </>\r\n    );\r\n  };\r\n\r\n  WrappedEndiannessConverter.propTypes = {\r\n    array: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\r\n    endianness: PropTypes.oneOf(['big', 'middleBig', 'middleLittle', 'little']).isRequired,\r\n  };\r\n\r\n  return WrappedEndiannessConverter;\r\n};\r\n\r\nEndiannessConverter.propTypes = {\r\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\r\n  endianness: PropTypes.oneOf(['big', 'middleBig', 'middleLittle', 'little']).isRequired,\r\n};\r\n\r\nexport default EndiannessConverter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport EndiannessConverter from './EndiannessConverter';\r\n\r\nconst Section = (TypeComponent) => {\r\n  const WrappedSection = ({ array, byteLength, title }) => {\r\n    const TypeEndiannessConverter = EndiannessConverter(TypeComponent);\r\n\r\n    return (\r\n      <ExpansionPanel defaultExpanded>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          <Typography>{title}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Grid spacing={16} container>\r\n            <Grid xs={12} lg={6} item>\r\n              <TypeEndiannessConverter array={array} byteLength={byteLength} endianness=\"big\" />\r\n            </Grid>\r\n            <Grid xs={12} lg={6} item>\r\n              <TypeEndiannessConverter array={array} byteLength={byteLength} endianness=\"little\" />\r\n            </Grid>\r\n            {byteLength > 2 && (\r\n              <Grid xs={12} lg={6} item>\r\n                <TypeEndiannessConverter\r\n                  array={array}\r\n                  byteLength={byteLength}\r\n                  endianness=\"middleBig\"\r\n                />\r\n              </Grid>\r\n            )}\r\n            {byteLength > 2 && (\r\n              <Grid xs={12} lg={6} item>\r\n                <TypeEndiannessConverter\r\n                  array={array}\r\n                  byteLength={byteLength}\r\n                  endianness=\"middleLittle\"\r\n                />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    );\r\n  };\r\n\r\n  WrappedSection.propTypes = {\r\n    array: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  };\r\n\r\n  return WrappedSection;\r\n};\r\n\r\nSection.propTypes = {\r\n  array: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  byteLength: PropTypes.oneOf([2, 4, 8]).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\n\r\nimport Float from './components/Float';\r\nimport Footer from './components/Footer';\r\nimport HexStringInput from './components/HexStringInput';\r\nimport Integer from './components/Integer';\r\nimport Navigation from './components/Navigation';\r\nimport Section from './components/Section';\r\n\r\nconst muiTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#263238',\r\n      dark: '#000A12',\r\n      light: '#4F5B62',\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    width: 'auto',\r\n    paddingTop: theme.spacing.unit * 4,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '540px',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '720px',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '960px',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: '1140px',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n});\r\n\r\nconst IntegerSection = Section(Integer);\r\nconst FloatSection = Section(Float);\r\n\r\nconst App = ({ classes, version, input }) => (\r\n  <MuiThemeProvider theme={muiTheme}>\r\n    <CssBaseline />\r\n    <Navigation />\r\n    <Grid className={classes.layout} spacing={16} container>\r\n      <Grid xs={12} item>\r\n        <HexStringInput />\r\n      </Grid>\r\n      <Grid xs={12} item>\r\n        <IntegerSection array={input} byteLength={8} title=\"64 bit integer\" />\r\n      </Grid>\r\n      <Grid xs={12} item>\r\n        <IntegerSection array={input} byteLength={4} title=\"32 bit integer\" />\r\n      </Grid>\r\n      <Grid xs={12} item>\r\n        <IntegerSection array={input} byteLength={2} title=\"16 bit integer\" />\r\n      </Grid>\r\n      <Grid xs={12} item>\r\n        <FloatSection array={input} byteLength={8} title=\"double\" />\r\n      </Grid>\r\n      <Grid xs={12} item>\r\n        <FloatSection array={input} byteLength={4} title=\"float\" />\r\n      </Grid>\r\n    </Grid>\r\n    <Footer version={version} />\r\n  </MuiThemeProvider>\r\n);\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.shape({\r\n    layout: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  version: PropTypes.string.isRequired,\r\n  input: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  input: state.input,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(App));\r\n","import { combineReducers } from 'redux';\r\n\r\nimport input from './input';\r\n\r\nexport default combineReducers({ input });\r\n","import { CHANGE_INPUT } from '../action/input';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case CHANGE_INPUT:\r\n      return action.input;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/* eslint-disable */\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport App from './App';\r\nimport './App.css';\r\n\r\nimport reducer from './reducer';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst version = 'chendian 1.2.0';\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App version={version} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}